// automatically generated by the FlatBuffers compiler, do not modify

package grouppack

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type T_GROUP_TYPE_LIST_RQ struct {
	_tab flatbuffers.Table
}

func GetRootAsT_GROUP_TYPE_LIST_RQ(buf []byte, offset flatbuffers.UOffsetT) *T_GROUP_TYPE_LIST_RQ {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &T_GROUP_TYPE_LIST_RQ{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *T_GROUP_TYPE_LIST_RQ) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *T_GROUP_TYPE_LIST_RQ) SRqHead(obj *S_RQ_HEAD) *S_RQ_HEAD {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := o + rcv._tab.Pos
		if obj == nil {
			obj = new(S_RQ_HEAD)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func T_GROUP_TYPE_LIST_RQStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func T_GROUP_TYPE_LIST_RQAddSRqHead(builder *flatbuffers.Builder, sRqHead flatbuffers.UOffsetT) {
	builder.PrependStructSlot(0, flatbuffers.UOffsetT(sRqHead), 0)
}
func T_GROUP_TYPE_LIST_RQEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
