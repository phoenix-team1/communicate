// automatically generated by the FlatBuffers compiler, do not modify

package offcialpack

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type T_OFFCIAL_BASE_REQUEST struct {
	_tab flatbuffers.Table
}

func GetRootAsT_OFFCIAL_BASE_REQUEST(buf []byte, offset flatbuffers.UOffsetT) *T_OFFCIAL_BASE_REQUEST {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &T_OFFCIAL_BASE_REQUEST{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *T_OFFCIAL_BASE_REQUEST) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *T_OFFCIAL_BASE_REQUEST) OffcialId() uint64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *T_OFFCIAL_BASE_REQUEST) MutateOffcialId(n uint64) bool {
	return rcv._tab.MutateUint64Slot(4, n)
}

func (rcv *T_OFFCIAL_BASE_REQUEST) NextMessageId() uint64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *T_OFFCIAL_BASE_REQUEST) MutateNextMessageId(n uint64) bool {
	return rcv._tab.MutateUint64Slot(6, n)
}

func T_OFFCIAL_BASE_REQUESTStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func T_OFFCIAL_BASE_REQUESTAddOffcialId(builder *flatbuffers.Builder, offcialId uint64) {
	builder.PrependUint64Slot(0, offcialId, 0)
}
func T_OFFCIAL_BASE_REQUESTAddNextMessageId(builder *flatbuffers.Builder, nextMessageId uint64) {
	builder.PrependUint64Slot(1, nextMessageId, 0)
}
func T_OFFCIAL_BASE_REQUESTEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
