// automatically generated by the FlatBuffers compiler, do not modify

package ecpack;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class T_ORDER_INFO extends Table {
  public static T_ORDER_INFO getRootAsT_ORDER_INFO(ByteBuffer _bb) { return getRootAsT_ORDER_INFO(_bb, new T_ORDER_INFO()); }
  public static T_ORDER_INFO getRootAsT_ORDER_INFO(ByteBuffer _bb, T_ORDER_INFO obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public T_ORDER_INFO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long buyerId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long orderId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long payTime() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long sellerId() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long totalAmount() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public int orderstate() { int o = __offset(14); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String orderstatestr() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer orderstatestrAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ecpack.T_GOODSINFTOIMS goodsInfoDto4IMs(int j) { return goodsInfoDto4IMs(new ecpack.T_GOODSINFTOIMS(), j); }
  public ecpack.T_GOODSINFTOIMS goodsInfoDto4IMs(ecpack.T_GOODSINFTOIMS obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int goodsInfoDto4IMsLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }

  public static int createT_ORDER_INFO(FlatBufferBuilder builder,
      long buyerId,
      long orderId,
      long payTime,
      long sellerId,
      long totalAmount,
      int orderstate,
      int orderstatestrOffset,
      int goodsInfoDto4IMsOffset) {
    builder.startObject(8);
    T_ORDER_INFO.addTotalAmount(builder, totalAmount);
    T_ORDER_INFO.addSellerId(builder, sellerId);
    T_ORDER_INFO.addPayTime(builder, payTime);
    T_ORDER_INFO.addOrderId(builder, orderId);
    T_ORDER_INFO.addBuyerId(builder, buyerId);
    T_ORDER_INFO.addGoodsInfoDto4IMs(builder, goodsInfoDto4IMsOffset);
    T_ORDER_INFO.addOrderstatestr(builder, orderstatestrOffset);
    T_ORDER_INFO.addOrderstate(builder, orderstate);
    return T_ORDER_INFO.endT_ORDER_INFO(builder);
  }

  public static void startT_ORDER_INFO(FlatBufferBuilder builder) { builder.startObject(8); }
  public static void addBuyerId(FlatBufferBuilder builder, long buyerId) { builder.addLong(0, buyerId, 0L); }
  public static void addOrderId(FlatBufferBuilder builder, long orderId) { builder.addLong(1, orderId, 0L); }
  public static void addPayTime(FlatBufferBuilder builder, long payTime) { builder.addLong(2, payTime, 0L); }
  public static void addSellerId(FlatBufferBuilder builder, long sellerId) { builder.addLong(3, sellerId, 0L); }
  public static void addTotalAmount(FlatBufferBuilder builder, long totalAmount) { builder.addLong(4, totalAmount, 0L); }
  public static void addOrderstate(FlatBufferBuilder builder, int orderstate) { builder.addInt(5, orderstate, 0); }
  public static void addOrderstatestr(FlatBufferBuilder builder, int orderstatestrOffset) { builder.addOffset(6, orderstatestrOffset, 0); }
  public static void addGoodsInfoDto4IMs(FlatBufferBuilder builder, int goodsInfoDto4IMsOffset) { builder.addOffset(7, goodsInfoDto4IMsOffset, 0); }
  public static int createGoodsInfoDto4IMsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startGoodsInfoDto4IMsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endT_ORDER_INFO(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishT_ORDER_INFOBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

