// automatically generated by the FlatBuffers compiler, do not modify

package grouppack;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class T_GROUP_CHAT_NOTIFY_RQ extends Table {
  public static T_GROUP_CHAT_NOTIFY_RQ getRootAsT_GROUP_CHAT_NOTIFY_RQ(ByteBuffer _bb) { return getRootAsT_GROUP_CHAT_NOTIFY_RQ(_bb, new T_GROUP_CHAT_NOTIFY_RQ()); }
  public static T_GROUP_CHAT_NOTIFY_RQ getRootAsT_GROUP_CHAT_NOTIFY_RQ(ByteBuffer _bb, T_GROUP_CHAT_NOTIFY_RQ obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public T_GROUP_CHAT_NOTIFY_RQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long groupId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String groupName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer groupNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }

  public static int createT_GROUP_CHAT_NOTIFY_RQ(FlatBufferBuilder builder,
      long group_id,
      int group_nameOffset) {
    builder.startObject(2);
    T_GROUP_CHAT_NOTIFY_RQ.addGroupId(builder, group_id);
    T_GROUP_CHAT_NOTIFY_RQ.addGroupName(builder, group_nameOffset);
    return T_GROUP_CHAT_NOTIFY_RQ.endT_GROUP_CHAT_NOTIFY_RQ(builder);
  }

  public static void startT_GROUP_CHAT_NOTIFY_RQ(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addGroupId(FlatBufferBuilder builder, long groupId) { builder.addLong(0, groupId, 0L); }
  public static void addGroupName(FlatBufferBuilder builder, int groupNameOffset) { builder.addOffset(1, groupNameOffset, 0); }
  public static int endT_GROUP_CHAT_NOTIFY_RQ(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishT_GROUP_CHAT_NOTIFY_RQBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

