// automatically generated by the FlatBuffers compiler, do not modify

package grouppack;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class T_GROUP_TYPE_INFO extends Table {
  public static T_GROUP_TYPE_INFO getRootAsT_GROUP_TYPE_INFO(ByteBuffer _bb) { return getRootAsT_GROUP_TYPE_INFO(_bb, new T_GROUP_TYPE_INFO()); }
  public static T_GROUP_TYPE_INFO getRootAsT_GROUP_TYPE_INFO(ByteBuffer _bb, T_GROUP_TYPE_INFO obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public T_GROUP_TYPE_INFO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int groupMaxCount() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int groupType() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public byte groupIsShow() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public int groupAddMaxCount() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createT_GROUP_TYPE_INFO(FlatBufferBuilder builder,
      int group_max_count,
      int group_type,
      byte group_is_show,
      int group_add_max_count) {
    builder.startObject(4);
    T_GROUP_TYPE_INFO.addGroupAddMaxCount(builder, group_add_max_count);
    T_GROUP_TYPE_INFO.addGroupType(builder, group_type);
    T_GROUP_TYPE_INFO.addGroupMaxCount(builder, group_max_count);
    T_GROUP_TYPE_INFO.addGroupIsShow(builder, group_is_show);
    return T_GROUP_TYPE_INFO.endT_GROUP_TYPE_INFO(builder);
  }

  public static void startT_GROUP_TYPE_INFO(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addGroupMaxCount(FlatBufferBuilder builder, int groupMaxCount) { builder.addInt(0, groupMaxCount, 0); }
  public static void addGroupType(FlatBufferBuilder builder, int groupType) { builder.addInt(1, groupType, 0); }
  public static void addGroupIsShow(FlatBufferBuilder builder, byte groupIsShow) { builder.addByte(2, groupIsShow, 0); }
  public static void addGroupAddMaxCount(FlatBufferBuilder builder, int groupAddMaxCount) { builder.addInt(3, groupAddMaxCount, 0); }
  public static int endT_GROUP_TYPE_INFO(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishT_GROUP_TYPE_INFOBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

