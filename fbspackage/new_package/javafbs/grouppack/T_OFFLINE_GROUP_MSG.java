// automatically generated by the FlatBuffers compiler, do not modify

package grouppack;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class T_OFFLINE_GROUP_MSG extends Table {
  public static T_OFFLINE_GROUP_MSG getRootAsT_OFFLINE_GROUP_MSG(ByteBuffer _bb) { return getRootAsT_OFFLINE_GROUP_MSG(_bb, new T_OFFLINE_GROUP_MSG()); }
  public static T_OFFLINE_GROUP_MSG getRootAsT_OFFLINE_GROUP_MSG(ByteBuffer _bb, T_OFFLINE_GROUP_MSG obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public T_OFFLINE_GROUP_MSG __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long userId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long messageId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public commonpack.S_MSG sMsg() { return sMsg(new commonpack.S_MSG()); }
  public commonpack.S_MSG sMsg(commonpack.S_MSG obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public int bigMsgType() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public T_OPERATE_GROUP_MSG operateGroupMsg() { return operateGroupMsg(new T_OPERATE_GROUP_MSG()); }
  public T_OPERATE_GROUP_MSG operateGroupMsg(T_OPERATE_GROUP_MSG obj) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long messageOldId() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public grouppack.T_GROUP_BASE_INFO groupInfo() { return groupInfo(new grouppack.T_GROUP_BASE_INFO()); }
  public grouppack.T_GROUP_BASE_INFO groupInfo(grouppack.T_GROUP_BASE_INFO obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createT_OFFLINE_GROUP_MSG(FlatBufferBuilder builder,
      long user_id,
      long message_id,
      int s_msgOffset,
      int big_msg_type,
      int operate_group_msgOffset,
      long message_old_id,
      int group_infoOffset) {
    builder.startObject(7);
    T_OFFLINE_GROUP_MSG.addMessageOldId(builder, message_old_id);
    T_OFFLINE_GROUP_MSG.addMessageId(builder, message_id);
    T_OFFLINE_GROUP_MSG.addUserId(builder, user_id);
    T_OFFLINE_GROUP_MSG.addGroupInfo(builder, group_infoOffset);
    T_OFFLINE_GROUP_MSG.addOperateGroupMsg(builder, operate_group_msgOffset);
    T_OFFLINE_GROUP_MSG.addBigMsgType(builder, big_msg_type);
    T_OFFLINE_GROUP_MSG.addSMsg(builder, s_msgOffset);
    return T_OFFLINE_GROUP_MSG.endT_OFFLINE_GROUP_MSG(builder);
  }

  public static void startT_OFFLINE_GROUP_MSG(FlatBufferBuilder builder) { builder.startObject(7); }
  public static void addUserId(FlatBufferBuilder builder, long userId) { builder.addLong(0, userId, 0L); }
  public static void addMessageId(FlatBufferBuilder builder, long messageId) { builder.addLong(1, messageId, 0L); }
  public static void addSMsg(FlatBufferBuilder builder, int sMsgOffset) { builder.addOffset(2, sMsgOffset, 0); }
  public static void addBigMsgType(FlatBufferBuilder builder, int bigMsgType) { builder.addInt(3, bigMsgType, 0); }
  public static void addOperateGroupMsg(FlatBufferBuilder builder, int operateGroupMsgOffset) { builder.addOffset(4, operateGroupMsgOffset, 0); }
  public static void addMessageOldId(FlatBufferBuilder builder, long messageOldId) { builder.addLong(5, messageOldId, 0L); }
  public static void addGroupInfo(FlatBufferBuilder builder, int groupInfoOffset) { builder.addOffset(6, groupInfoOffset, 0); }
  public static int endT_OFFLINE_GROUP_MSG(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishT_OFFLINE_GROUP_MSGBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

