// automatically generated by the FlatBuffers compiler, do not modify

package userpack;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class T_KEYINFO extends Table {
  public static T_KEYINFO getRootAsT_KEYINFO(ByteBuffer _bb) { return getRootAsT_KEYINFO(_bb, new T_KEYINFO()); }
  public static T_KEYINFO getRootAsT_KEYINFO(ByteBuffer _bb, T_KEYINFO obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public T_KEYINFO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int keyName() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String keyValue() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer keyValueAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }

  public static int createT_KEYINFO(FlatBufferBuilder builder,
      int key_name,
      int key_valueOffset) {
    builder.startObject(2);
    T_KEYINFO.addKeyValue(builder, key_valueOffset);
    T_KEYINFO.addKeyName(builder, key_name);
    return T_KEYINFO.endT_KEYINFO(builder);
  }

  public static void startT_KEYINFO(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addKeyName(FlatBufferBuilder builder, int keyName) { builder.addInt(0, keyName, 0); }
  public static void addKeyValue(FlatBufferBuilder builder, int keyValueOffset) { builder.addOffset(1, keyValueOffset, 0); }
  public static int endT_KEYINFO(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

