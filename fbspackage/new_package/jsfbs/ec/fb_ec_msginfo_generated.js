// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var commonpack = commonpack || {};

/**
 * @const
 * @namespace
 */
var ecpack = ecpack || {};

/**
 * @constructor
 */
ecpack.T_ECMSG_INFO = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ecpack.T_ECMSG_INFO}
 */
ecpack.T_ECMSG_INFO.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ecpack.T_ECMSG_INFO=} obj
 * @returns {ecpack.T_ECMSG_INFO}
 */
ecpack.T_ECMSG_INFO.getRootAsT_ECMSG_INFO = function(bb, obj) {
  return (obj || new ecpack.T_ECMSG_INFO).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
ecpack.T_ECMSG_INFO.prototype.appId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
ecpack.T_ECMSG_INFO.prototype.sessionId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
ecpack.T_ECMSG_INFO.prototype.chatType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
ecpack.T_ECMSG_INFO.prototype.mType = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
ecpack.T_ECMSG_INFO.prototype.sType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
ecpack.T_ECMSG_INFO.prototype.extType = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.fromId = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.toId = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.bId = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.cId = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.wId = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.messageId = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_ECMSG_INFO.prototype.msgTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ecpack.T_ECMSG_INFO.prototype.msgContent = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ecpack.T_ECMSG_INFO.prototype.sendUserName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ecpack.T_ECMSG_INFO.startT_ECMSG_INFO = function(builder) {
  builder.startObject(15);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} appId
 */
ecpack.T_ECMSG_INFO.addAppId = function(builder, appId) {
  builder.addFieldInt16(0, appId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sessionId
 */
ecpack.T_ECMSG_INFO.addSessionId = function(builder, sessionId) {
  builder.addFieldInt32(1, sessionId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} chatType
 */
ecpack.T_ECMSG_INFO.addChatType = function(builder, chatType) {
  builder.addFieldInt16(2, chatType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mType
 */
ecpack.T_ECMSG_INFO.addMType = function(builder, mType) {
  builder.addFieldInt32(3, mType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sType
 */
ecpack.T_ECMSG_INFO.addSType = function(builder, sType) {
  builder.addFieldInt32(4, sType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} extType
 */
ecpack.T_ECMSG_INFO.addExtType = function(builder, extType) {
  builder.addFieldInt32(5, extType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} fromId
 */
ecpack.T_ECMSG_INFO.addFromId = function(builder, fromId) {
  builder.addFieldInt64(6, fromId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} toId
 */
ecpack.T_ECMSG_INFO.addToId = function(builder, toId) {
  builder.addFieldInt64(7, toId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} bId
 */
ecpack.T_ECMSG_INFO.addBId = function(builder, bId) {
  builder.addFieldInt64(8, bId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} cId
 */
ecpack.T_ECMSG_INFO.addCId = function(builder, cId) {
  builder.addFieldInt64(9, cId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} wId
 */
ecpack.T_ECMSG_INFO.addWId = function(builder, wId) {
  builder.addFieldInt64(10, wId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} messageId
 */
ecpack.T_ECMSG_INFO.addMessageId = function(builder, messageId) {
  builder.addFieldInt64(11, messageId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} msgTime
 */
ecpack.T_ECMSG_INFO.addMsgTime = function(builder, msgTime) {
  builder.addFieldInt64(12, msgTime, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} msgContentOffset
 */
ecpack.T_ECMSG_INFO.addMsgContent = function(builder, msgContentOffset) {
  builder.addFieldOffset(13, msgContentOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sendUserNameOffset
 */
ecpack.T_ECMSG_INFO.addSendUserName = function(builder, sendUserNameOffset) {
  builder.addFieldOffset(14, sendUserNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ecpack.T_ECMSG_INFO.endT_ECMSG_INFO = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ecpack.T_ECMSG_INFO.finishT_ECMSG_INFOBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.commonpack = commonpack;
this.ecpack = ecpack;
