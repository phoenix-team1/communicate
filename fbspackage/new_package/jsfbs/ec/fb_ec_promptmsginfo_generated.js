// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var commonpack = commonpack || {};

/**
 * @const
 * @namespace
 */
var ecpack = ecpack || {};

/**
 * @constructor
 */
ecpack.T_PROMPTMSG_INFO = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ecpack.T_PROMPTMSG_INFO}
 */
ecpack.T_PROMPTMSG_INFO.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ecpack.T_PROMPTMSG_INFO=} obj
 * @returns {ecpack.T_PROMPTMSG_INFO}
 */
ecpack.T_PROMPTMSG_INFO.getRootAsT_PROMPTMSG_INFO = function(bb, obj) {
  return (obj || new ecpack.T_PROMPTMSG_INFO).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
ecpack.T_PROMPTMSG_INFO.prototype.bId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
ecpack.T_PROMPTMSG_INFO.prototype.promptsType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ecpack.T_PROMPTMSG_INFO.prototype.promptsMsg = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ecpack.T_PROMPTMSG_INFO.startT_PROMPTMSG_INFO = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} bId
 */
ecpack.T_PROMPTMSG_INFO.addBId = function(builder, bId) {
  builder.addFieldInt64(0, bId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} promptsType
 */
ecpack.T_PROMPTMSG_INFO.addPromptsType = function(builder, promptsType) {
  builder.addFieldInt32(1, promptsType, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} promptsMsgOffset
 */
ecpack.T_PROMPTMSG_INFO.addPromptsMsg = function(builder, promptsMsgOffset) {
  builder.addFieldOffset(2, promptsMsgOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ecpack.T_PROMPTMSG_INFO.endT_PROMPTMSG_INFO = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ecpack.T_PROMPTMSG_INFO.finishT_PROMPTMSG_INFOBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.commonpack = commonpack;
this.ecpack = ecpack;
