// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var commonpack = commonpack || {};

/**
 * @const
 * @namespace
 */
var ecpack = ecpack || {};

/**
 * @constructor
 */
ecpack.T_EC_SETPROMPTS_RQ = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ecpack.T_EC_SETPROMPTS_RQ}
 */
ecpack.T_EC_SETPROMPTS_RQ.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ecpack.T_EC_SETPROMPTS_RQ=} obj
 * @returns {ecpack.T_EC_SETPROMPTS_RQ}
 */
ecpack.T_EC_SETPROMPTS_RQ.getRootAsT_EC_SETPROMPTS_RQ = function(bb, obj) {
  return (obj || new ecpack.T_EC_SETPROMPTS_RQ).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {commonpack.S_RQ_HEAD=} obj
 * @returns {commonpack.S_RQ_HEAD}
 */
ecpack.T_EC_SETPROMPTS_RQ.prototype.sRqHead = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new commonpack.S_RQ_HEAD).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @param {ecpack.T_PROMPTMSG_INFO=} obj
 * @returns {ecpack.T_PROMPTMSG_INFO}
 */
ecpack.T_EC_SETPROMPTS_RQ.prototype.promptsmsglist = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new ecpack.T_PROMPTMSG_INFO).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ecpack.T_EC_SETPROMPTS_RQ.prototype.promptsmsglistLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ecpack.T_EC_SETPROMPTS_RQ.startT_EC_SETPROMPTS_RQ = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sRqHeadOffset
 */
ecpack.T_EC_SETPROMPTS_RQ.addSRqHead = function(builder, sRqHeadOffset) {
  builder.addFieldStruct(0, sRqHeadOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} promptsmsglistOffset
 */
ecpack.T_EC_SETPROMPTS_RQ.addPromptsmsglist = function(builder, promptsmsglistOffset) {
  builder.addFieldOffset(1, promptsmsglistOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ecpack.T_EC_SETPROMPTS_RQ.createPromptsmsglistVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ecpack.T_EC_SETPROMPTS_RQ.startPromptsmsglistVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ecpack.T_EC_SETPROMPTS_RQ.endT_EC_SETPROMPTS_RQ = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ecpack.T_EC_SETPROMPTS_RQ.finishT_EC_SETPROMPTS_RQBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.commonpack = commonpack;
this.ecpack = ecpack;
