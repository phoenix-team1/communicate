// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var commonpack = commonpack || {};

/**
 * @const
 * @namespace
 */
var friendpack = friendpack || {};

/**
 * @constructor
 */
friendpack.T_FRIEND_LIST_RS = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {friendpack.T_FRIEND_LIST_RS}
 */
friendpack.T_FRIEND_LIST_RS.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {friendpack.T_FRIEND_LIST_RS=} obj
 * @returns {friendpack.T_FRIEND_LIST_RS}
 */
friendpack.T_FRIEND_LIST_RS.getRootAsT_FRIEND_LIST_RS = function(bb, obj) {
  return (obj || new friendpack.T_FRIEND_LIST_RS).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {commonpack.S_RS_HEAD=} obj
 * @returns {commonpack.S_RS_HEAD}
 */
friendpack.T_FRIEND_LIST_RS.prototype.sRsHead = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new commonpack.S_RS_HEAD).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @param {friendpack.T_FREIND_INFO=} obj
 * @returns {friendpack.T_FREIND_INFO}
 */
friendpack.T_FRIEND_LIST_RS.prototype.friendList = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new friendpack.T_FREIND_INFO).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
friendpack.T_FRIEND_LIST_RS.prototype.friendListLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
friendpack.T_FRIEND_LIST_RS.prototype.token = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
friendpack.T_FRIEND_LIST_RS.prototype.msgSource = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
friendpack.T_FRIEND_LIST_RS.startT_FRIEND_LIST_RS = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sRsHeadOffset
 */
friendpack.T_FRIEND_LIST_RS.addSRsHead = function(builder, sRsHeadOffset) {
  builder.addFieldStruct(0, sRsHeadOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} friendListOffset
 */
friendpack.T_FRIEND_LIST_RS.addFriendList = function(builder, friendListOffset) {
  builder.addFieldOffset(1, friendListOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
friendpack.T_FRIEND_LIST_RS.createFriendListVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
friendpack.T_FRIEND_LIST_RS.startFriendListVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} token
 */
friendpack.T_FRIEND_LIST_RS.addToken = function(builder, token) {
  builder.addFieldInt64(2, token, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} msgSource
 */
friendpack.T_FRIEND_LIST_RS.addMsgSource = function(builder, msgSource) {
  builder.addFieldInt32(3, msgSource, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
friendpack.T_FRIEND_LIST_RS.endT_FRIEND_LIST_RS = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
friendpack.T_FRIEND_LIST_RS.finishT_FRIEND_LIST_RSBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.commonpack = commonpack;
this.friendpack = friendpack;
