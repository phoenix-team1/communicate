// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var commonpack = commonpack || {};

/**
 * @const
 * @namespace
 */
var offcialpack = offcialpack || {};

/**
 * @constructor
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ=} obj
 * @returns {offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.getRootAsT_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ = function(bb, obj) {
  return (obj || new offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {commonpack.S_RQ_HEAD=} obj
 * @returns {commonpack.S_RQ_HEAD}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.prototype.sRqHead = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new commonpack.S_RQ_HEAD).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {number} index
 * @returns {flatbuffers.Long}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.prototype.listBId = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.prototype.listBIdLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint64Array}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.prototype.listBIdArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint64Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.startT_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sRqHeadOffset
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.addSRqHead = function(builder, sRqHeadOffset) {
  builder.addFieldStruct(0, sRqHeadOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} listBIdOffset
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.addListBId = function(builder, listBIdOffset) {
  builder.addFieldOffset(1, listBIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Long>} data
 * @returns {flatbuffers.Offset}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.createListBIdVector = function(builder, data) {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.startListBIdVector = function(builder, numElems) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.endT_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
offcialpack.T_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQ.finishT_CLIENT_OFFCIAL_GET_UNREAD_CNT_RQBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.commonpack = commonpack;
this.offcialpack = offcialpack;
