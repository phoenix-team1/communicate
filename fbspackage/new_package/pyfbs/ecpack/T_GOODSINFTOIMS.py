# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ecpack

import flatbuffers

class T_GOODSINFTOIMS(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsT_GOODSINFTOIMS(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = T_GOODSINFTOIMS()
        x.Init(buf, n + offset)
        return x

    # T_GOODSINFTOIMS
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # T_GOODSINFTOIMS
    def GoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # T_GOODSINFTOIMS
    def GoodsNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # T_GOODSINFTOIMS
    def SkuId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # T_GOODSINFTOIMS
    def UnitPrice(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # T_GOODSINFTOIMS
    def GoodsName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # T_GOODSINFTOIMS
    def SkuText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # T_GOODSINFTOIMS
    def ImgUrl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

def T_GOODSINFTOIMSStart(builder): builder.StartObject(7)
def T_GOODSINFTOIMSAddGoodsId(builder, goodsId): builder.PrependUint64Slot(0, goodsId, 0)
def T_GOODSINFTOIMSAddGoodsNum(builder, goodsNum): builder.PrependInt32Slot(1, goodsNum, 0)
def T_GOODSINFTOIMSAddSkuId(builder, skuId): builder.PrependUint64Slot(2, skuId, 0)
def T_GOODSINFTOIMSAddUnitPrice(builder, unitPrice): builder.PrependInt32Slot(3, unitPrice, 0)
def T_GOODSINFTOIMSAddGoodsName(builder, goodsName): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(goodsName), 0)
def T_GOODSINFTOIMSAddSkuText(builder, skuText): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(skuText), 0)
def T_GOODSINFTOIMSAddImgUrl(builder, imgUrl): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(imgUrl), 0)
def T_GOODSINFTOIMSEnd(builder): return builder.EndObject()
