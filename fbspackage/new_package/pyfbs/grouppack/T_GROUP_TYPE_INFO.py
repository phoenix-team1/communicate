# automatically generated by the FlatBuffers compiler, do not modify

# namespace: grouppack

import flatbuffers

class T_GROUP_TYPE_INFO(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsT_GROUP_TYPE_INFO(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = T_GROUP_TYPE_INFO()
        x.Init(buf, n + offset)
        return x

    # T_GROUP_TYPE_INFO
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # T_GROUP_TYPE_INFO
    def GroupMaxCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # T_GROUP_TYPE_INFO
    def GroupType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # T_GROUP_TYPE_INFO
    def GroupIsShow(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # T_GROUP_TYPE_INFO
    def GroupAddMaxCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def T_GROUP_TYPE_INFOStart(builder): builder.StartObject(4)
def T_GROUP_TYPE_INFOAddGroupMaxCount(builder, groupMaxCount): builder.PrependInt32Slot(0, groupMaxCount, 0)
def T_GROUP_TYPE_INFOAddGroupType(builder, groupType): builder.PrependInt32Slot(1, groupType, 0)
def T_GROUP_TYPE_INFOAddGroupIsShow(builder, groupIsShow): builder.PrependInt8Slot(2, groupIsShow, 0)
def T_GROUP_TYPE_INFOAddGroupAddMaxCount(builder, groupAddMaxCount): builder.PrependInt32Slot(3, groupAddMaxCount, 0)
def T_GROUP_TYPE_INFOEnd(builder): return builder.EndObject()
