# automatically generated by the FlatBuffers compiler, do not modify

# namespace: syspack

import flatbuffers

class T_SERVER_DISCON_ID(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsT_SERVER_DISCON_ID(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = T_SERVER_DISCON_ID()
        x.Init(buf, n + offset)
        return x

    # T_SERVER_DISCON_ID
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # T_SERVER_DISCON_ID
    def Result(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def T_SERVER_DISCON_IDStart(builder): builder.StartObject(1)
def T_SERVER_DISCON_IDAddResult(builder, result): builder.PrependInt32Slot(0, result, 0)
def T_SERVER_DISCON_IDEnd(builder): return builder.EndObject()
